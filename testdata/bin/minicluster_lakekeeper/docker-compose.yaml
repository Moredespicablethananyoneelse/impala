# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

services:
  lakekeeper:
    image: ${LAKEKEEPER_TEST__SERVER_IMAGE:-quay.io/lakekeeper/catalog:v0.8.3-hdfs-preview}
    pull_policy: always
    environment:
      - LAKEKEEPER__PG_ENCRYPTION_KEY=This-is-NOT-Secure!
      - LAKEKEEPER__PG_DATABASE_URL_READ=postgresql://postgres:postgres@localhost:54321/postgres
      - LAKEKEEPER__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@localhost:54321/postgres
      - LAKEKEEPER__ENABLE_HDFS_WITH_SYSTEM_CREDENTIALS=true
      - LAKEKEEPER__OPENID_PROVIDER_URI=http://localhost:7070/realms/lakekeeper-realm
      - LAKEKEEPER__OPENID_CLIENT_ID=lakekeeper-client
      - RUST_LOG=trace,axum=trace,sqlx=trace,iceberg-catalog=trace
      - HADOOP_USER_NAME=${USER}
      - HADOOP_CONF_DIR=/etc/hadoop
      - RUST_LOG=debug,hdfs_native=trace
    command: [ "serve" ]
    healthcheck:
      test: [ "CMD", "/home/nonroot/iceberg-catalog", "healthcheck" ]
      interval: 1s
      timeout: 10s
      retries: 3
      start_period: 3s
    depends_on:
      migrate:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    volumes:
      - ./core-site.xml:/etc/hadoop/core-site.xml:ro
      - ./hdfs-site.xml:/etc/hadoop/hdfs-site.xml:ro
    network_mode: host

  migrate:
    image: ${LAKEKEEPER_TEST__SERVER_IMAGE:-quay.io/lakekeeper/catalog:v0.8.3-hdfs-preview}
    pull_policy: always
    environment:
      - LAKEKEEPER__PG_ENCRYPTION_KEY=This-is-NOT-Secure!
      - LAKEKEEPER__ENABLE_HDFS_WITH_SYSTEM_CREDENTIALS=true
      - LAKEKEEPER__PG_DATABASE_URL_READ=postgresql://postgres:postgres@db:5432/postgres
      - LAKEKEEPER__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@db:5432/postgres
      - LAKEKEEPER__OPENID_PROVIDER_URI=http://localhost:7070/realms/lakekeeper-realm
      - LAKEKEEPER__OPENID_CLIENT_ID=lakekeeper-client
      - RUST_LOG=info
    restart: "no"
    command: [ "migrate" ]
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      lakekeeper_net:

  bootstrap:
    build: .
    depends_on:
      - keycloak
      - lakekeeper
    volumes:
      - ./setup.sh:/setup.sh
      - ./create-default-warehouse.json:/create-default-warehouse.json
    network_mode: host
    entrypoint: /setup.sh

  db:
    image: bitnami/postgresql:16.3.0
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5432 -d postgres" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s
    networks:
      lakekeeper_net:
    ports:
      - "54321:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    healthcheck:
      test:
        - "CMD-SHELL"
        - >
          [ -f /tmp/HealthCheck.java ] ||
          echo "public class HealthCheck {
            public static void main(String[] args) throws java.lang.Throwable {
              java.net.URI uri = java.net.URI.create(args[0]);
              System.exit(
                  java.net.HttpURLConnection.HTTP_OK ==
                  ((java.net.HttpURLConnection)uri.toURL().
                      openConnection()).getResponseCode() ? 0 : 1);
            }
          }" > /tmp/HealthCheck.java &&
          java /tmp/HealthCheck.java http://localhost:9000/health/live
      interval: 5s
      timeout: 5s
      retries: 5
    command: start-dev --import-realm
    volumes:
      - ./realm-config.json:/opt/keycloak/data/import/realm.json:ro
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    networks:
      lakekeeper_net:
    ports:
      - "7070:8080"

networks:
  lakekeeper_net:

